@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager


@model Bangazon.Models.Product

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Product</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Quantity)
        </dt>
        <dd class="col-sm-10">
            @await Component.InvokeAsync("ProductCount", new { productId = Model.ProductId })
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Price)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Price)
        </dd>
    </dl>
    @{ var currentUser = SignInManager.UserManager.GetUserId(User);

        if (currentUser != null && Model.UserId == currentUser)
        { <p>This is your product listing.</p>  
          <a asp-action="Edit" asp-route-id="@Model.ProductId">Update Inventory</a>
        }
        else if (ViewBag.ProductCount > 0)
        {
            <a asp-controller="Orders" asp-action="AddToCart" asp-route-id="@Model.ProductId">Add to Cart</a>
        }
        else
        {
            <p>This product is sold out.</p>
        }
    }


</div>
<div>
    <a href='javascript:history.go(-1)'>Previous Page</a> |
    <a asp-action="Index" asp-controller="Products">Home</a>

</div>
